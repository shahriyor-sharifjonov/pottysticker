"use strict";function _typeof(a){"@babel/helpers - typeof";return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(a){return typeof a}:function(a){return a&&"function"==typeof Symbol&&a.constructor===Symbol&&a!==Symbol.prototype?"symbol":typeof a},_typeof(a)}window.Modernizr=function(a,b){function c(a){o.cssText=a}function d(a,b){return c(r.join(a+";")+(b||""))}function e(a,b){return _typeof(a)===b}function f(a,b){return!!~(""+a).indexOf(b)}function g(a,b){for(var c in a){var d=a[c];if(!f(d,"-")&&void 0!==o[d])return"pfx"!=b||d}return!1}function h(a,b,c){for(var d in a){var f=b[a[d]];if(void 0!==f)return!1===c?a[d]:e(f,"function")?f.bind(c||b):f}return!1}function i(a,b,c){var d=a.charAt(0).toUpperCase()+a.slice(1),f=(a+" "+s.join(d+" ")+d).split(" ");return e(b,"string")||e(b,"undefined")?g(f,b):(f=(a+" "+t.join(d+" ")+d).split(" "),h(f,b,c))}var j,k,l={},m=b.documentElement,n=b.createElement("modernizr"),o=n.style,p=b.createElement("input"),q={}.toString,r=["","-webkit-","-moz-","-o-","-ms-",""],s=["Webkit","Moz","O","ms"],t="Webkit Moz O ms".toLowerCase().split(" "),u={svg:"http://www.w3.org/2000/svg"},v={},w={},x={},y=[],z=y.slice,A=function(a,c,d,e){var f,g,h,i=b.createElement("div"),j=b.body,k=j?j:b.createElement("body");if(parseInt(d,10))for(;d--;)h=b.createElement("div"),h.id=e?e[d]:"modernizr"+(d+1),i.appendChild(h);return f=["&#173;","<style id=\"s","modernizr","\">",a,"</style>"].join(""),i.id="modernizr",(j?i:k).innerHTML+=f,k.appendChild(i),j||(k.style.background="",m.appendChild(k)),g=c(i,a),j?i.parentNode.removeChild(i):k.parentNode.removeChild(k),!!g},B=function(){function a(a,d){d=d||b.createElement(c[a]||"div"),a="on"+a;var f=(a in d);return f||(!d.setAttribute&&(d=b.createElement("div")),d.setAttribute&&d.removeAttribute&&(d.setAttribute(a,""),f=e(d[a],"function"),!e(d[a],"undefined")&&(d[a]=void 0),d.removeAttribute(a))),d=null,f}var c={select:"input",change:"input",submit:"form",reset:"form",error:"img",load:"img",abort:"img"};return a}(),C={}.hasOwnProperty;for(var D in k=e(C,"undefined")||e(C.call,"undefined")?function(a,b){return b in a&&e(a.constructor.prototype[b],"undefined")}:function(a,b){return C.call(a,b)},Function.prototype.bind||(Function.prototype.bind=function(a){var b=this;if("function"!=typeof b)throw new TypeError;var c=z.call(arguments,1),d=function(){if(this instanceof d){var e=function(){};e.prototype=b.prototype;var f=new e,g=b.apply(f,c.concat(z.call(arguments)));return Object(g)===g?g:f}return b.apply(a,c.concat(z.call(arguments)))};return d}),v.flexbox=function(){return i("flexWrap")},v.canvas=function(){var a=b.createElement("canvas");return!!(a.getContext&&a.getContext("2d"))},v.canvastext=function(){return!!(l.canvas&&e(b.createElement("canvas").getContext("2d").fillText,"function"))},v.webgl=function(){return!!a.WebGLRenderingContext},v.touch=function(){var c;return"ontouchstart"in a||a.DocumentTouch&&b instanceof DocumentTouch?c=!0:A(["@media (",r.join("touch-enabled),("),"modernizr",")","{#modernizr{top:9px;position:absolute}}"].join(""),function(a){c=9===a.offsetTop}),c},v.geolocation=function(){return"geolocation"in navigator},v.postmessage=function(){return!!a.postMessage},v.websqldatabase=function(){return!!a.openDatabase},v.indexedDB=function(){return!!i("indexedDB",a)},v.hashchange=function(){return B("hashchange",a)&&(void 0===b.documentMode||7<b.documentMode)},v.history=function(){return!!(a.history&&history.pushState)},v.draganddrop=function(){var a=b.createElement("div");return"draggable"in a||"ondragstart"in a&&"ondrop"in a},v.websockets=function(){return"WebSocket"in a||"MozWebSocket"in a},v.rgba=function(){return c("background-color:rgba(150,255,150,.5)"),f(o.backgroundColor,"rgba")},v.hsla=function(){return c("background-color:hsla(120,40%,100%,.5)"),f(o.backgroundColor,"rgba")||f(o.backgroundColor,"hsla")},v.multiplebgs=function(){return c("background:url(https://),url(https://),red url(https://)"),/(url\s*\(.*?){3}/.test(o.background)},v.backgroundsize=function(){return i("backgroundSize")},v.borderimage=function(){return i("borderImage")},v.borderradius=function(){return i("borderRadius")},v.boxshadow=function(){return i("boxShadow")},v.textshadow=function(){return""===b.createElement("div").style.textShadow},v.opacity=function(){return d("opacity:.55"),/^0.55$/.test(o.opacity)},v.cssanimations=function(){return i("animationName")},v.csscolumns=function(){return i("columnCount")},v.cssgradients=function(){return c(("background-image:-webkit-gradient(linear,left top,right bottom,from(#9f9),to(white));background-image:"+r.join("linear-gradient(left top,#9f9, white);background-image:")).slice(0,-17)),f(o.backgroundImage,"gradient")},v.cssreflections=function(){return i("boxReflect")},v.csstransforms=function(){return!!i("transform")},v.csstransforms3d=function(){var a=!!i("perspective");return a&&"webkitPerspective"in m.style&&A("@media (transform-3d),(-webkit-transform-3d){#modernizr{left:9px;position:absolute;height:3px;}}",function(b){a=9===b.offsetLeft&&3===b.offsetHeight}),a},v.csstransitions=function(){return i("transition")},v.fontface=function(){var a;return A("@font-face {font-family:\"font\";src:url(\"https://\")}",function(c,d){var e=b.getElementById("smodernizr"),f=e.sheet||e.styleSheet,g=f?f.cssRules&&f.cssRules[0]?f.cssRules[0].cssText:f.cssText||"":"";a=/src/i.test(g)&&0===g.indexOf(d.split(" ")[0])}),a},v.generatedcontent=function(){var a;return A("#modernizr:after{content:\":)\";visibility:hidden}",function(b){a=1<=b.offsetHeight}),a},v.video=function(){var a=b.createElement("video"),c=!1;try{(c=!!a.canPlayType)&&(c=new Boolean(c),c.ogg=a.canPlayType("video/ogg; codecs=\"theora\"").replace(/^no$/,""),c.h264=a.canPlayType("video/mp4; codecs=\"avc1.42E01E\"").replace(/^no$/,""),c.webm=a.canPlayType("video/webm; codecs=\"vp8, vorbis\"").replace(/^no$/,""))}catch(a){}return c},v.audio=function(){var a=b.createElement("audio"),c=!1;try{(c=!!a.canPlayType)&&(c=new Boolean(c),c.ogg=a.canPlayType("audio/ogg; codecs=\"vorbis\"").replace(/^no$/,""),c.mp3=a.canPlayType("audio/mpeg;").replace(/^no$/,""),c.wav=a.canPlayType("audio/wav; codecs=\"1\"").replace(/^no$/,""),c.m4a=(a.canPlayType("audio/x-m4a;")||a.canPlayType("audio/aac;")).replace(/^no$/,""))}catch(a){}return c},v.localstorage=function(){try{return localStorage.setItem("modernizr","modernizr"),localStorage.removeItem("modernizr"),!0}catch(a){return!1}},v.sessionstorage=function(){try{return sessionStorage.setItem("modernizr","modernizr"),sessionStorage.removeItem("modernizr"),!0}catch(a){return!1}},v.webworkers=function(){return!!a.Worker},v.applicationcache=function(){return!!a.applicationCache},v.svg=function(){return!!b.createElementNS&&!!b.createElementNS(u.svg,"svg").createSVGRect},v.inlinesvg=function(){var a=b.createElement("div");return a.innerHTML="<svg/>",(a.firstChild&&a.firstChild.namespaceURI)==u.svg},v.smil=function(){return!!b.createElementNS&&/SVGAnimate/.test(q.call(b.createElementNS(u.svg,"animate")))},v.svgclippaths=function(){return!!b.createElementNS&&/SVGClipPath/.test(q.call(b.createElementNS(u.svg,"clipPath")))},v)k(v,D)&&(j=D.toLowerCase(),l[j]=v[D](),y.push((l[j]?"":"no-")+j));return l.input||function(){l.input=function(c){for(var d=0,e=c.length;d<e;d++)x[c[d]]=!!(c[d]in p);return x.list&&(x.list=!!(b.createElement("datalist")&&a.HTMLDataListElement)),x}(["autocomplete","autofocus","list","placeholder","max","min","multiple","pattern","required","step"]),l.inputtypes=function(a){for(var c,d,e,f=0,g=a.length;f<g;f++)p.setAttribute("type",d=a[f]),c="text"!==p.type,c&&(p.value=":)",p.style.cssText="position:absolute;visibility:hidden;",/^range$/.test(d)&&void 0!==p.style.WebkitAppearance?(m.appendChild(p),e=b.defaultView,c=e.getComputedStyle&&"textfield"!==e.getComputedStyle(p,null).WebkitAppearance&&0!==p.offsetHeight,m.removeChild(p)):/^(search|tel)$/.test(d)||(/^(url|email)$/.test(d)?c=p.checkValidity&&!1===p.checkValidity():c=":)"!=p.value)),w[a[f]]=!!c;return w}(["search","tel","url","email","datetime","date","month","week","time","datetime-local","number","range","color"])}(),l.addTest=function(a,b){if("object"==_typeof(a))for(var c in a)k(a,c)&&l.addTest(c,a[c]);else{if(a=a.toLowerCase(),void 0!==l[a])return l;b="function"==typeof b?b():b,m.className+=" "+(b?"":"no-")+a,l[a]=b}return l},c(""),n=p=null,l._version="2.6.1",l._prefixes=r,l._domPrefixes=t,l._cssomPrefixes=s,l.mq=function testMediaQuery(b){var c=a.matchMedia||a.msMatchMedia;if(c)return c(b).matches;var d;return A("@media "+b+" { #modernizr { position: absolute; } }",function(b){d="absolute"==(a.getComputedStyle?getComputedStyle(b,null):b.currentStyle).position}),d},l.hasEvent=B,l.testProp=function(a){return g([a])},l.testAllProps=i,l.testStyles=A,l.prefixed=function(a,b,c){return b?i(a,b,c):i(a,"pfx")},m.className=m.className.replace(/(^|\s)no-js(\s|$)/,"$1$2")+(" js "+y.join(" ")),l}(void 0,(void 0).document);(function(a,b){function c(a,b){var c=a.createElement("p"),d=a.getElementsByTagName("head")[0]||a.documentElement;return c.innerHTML="x<style>"+b+"</style>",d.insertBefore(c.lastChild,d.firstChild)}function d(){var a=v.elements;return"string"==typeof a?a.split(" "):a}function e(a){var b=u[a._html5shiv];return b||(b={},t++,a._html5shiv=t,u[t]=b),b}function f(a,c,d){if(c||(c=b),p)return c.createElement(a);d||(d=e(c));var f;return f=d.cache[a]?d.cache[a].cloneNode():s.test(a)?(d.cache[a]=d.createElem(a)).cloneNode():d.createElem(a),f.canHaveChildren&&!r.test(a)?d.frag.appendChild(f):f}function g(a,c){if(a||(a=b),p)return a.createDocumentFragment();c=c||e(a);for(var f=c.frag.cloneNode(),g=0,h=d(),j=h.length;g<j;g++)f.createElement(h[g]);return f}function h(a,b){b.cache||(b.cache={},b.createElem=a.createElement,b.createFrag=a.createDocumentFragment,b.frag=b.createFrag()),a.createElement=function(c){return v.shivMethods?f(c,a,b):b.createElem(c)},a.createDocumentFragment=Function("h,f","return function(){var n=f.cloneNode(),c=n.createElement;h.shivMethods&&("+d().join().replace(/\w+/g,function(a){return b.createElem(a),b.frag.createElement(a),"c(\""+a+"\")"})+");return n}")(v,b.frag)}function i(a){a||(a=b);var d=e(a);return!v.shivCSS||o||d.hasCSS||(d.hasCSS=!!c(a,"article,aside,figcaption,figure,footer,header,hgroup,nav,section{display:block}mark{background:#FF0;color:#000}")),p||h(a,d),a}function j(a){for(var b,c=a.getElementsByTagName("*"),e=c.length,f=RegExp("^(?:"+d().join("|")+")$","i"),g=[];e--;)b=c[e],f.test(b.nodeName)&&g.push(b.applyElement(k(b)));return g}function k(a){for(var b,c=a.attributes,d=c.length,e=a.ownerDocument.createElement("html5shiv:"+a.nodeName);d--;)b=c[d],b.specified&&e.setAttribute(b.nodeName,b.nodeValue);return e.style.cssText=a.style.cssText,e}function l(a){for(var b,c=a.split("{"),e=c.length,f=RegExp("(^|[\\s,>+~])("+d().join("|")+")(?=[[\\s,>+~#.:]|$)","gi");e--;)b=c[e]=c[e].split("}"),b[b.length-1]=b[b.length-1].replace(f,"$1html5shiv\\:$2"),c[e]=b.join("}");return c.join("{")}function m(a){for(var b=a.length;b--;)a[b].removeNode()}function n(a){function b(){clearTimeout(g._removeSheetTimer),d&&d.removeNode(!0),d=null}var d,f,g=e(a),h=a.namespaces,i=a.parentWindow;return!x||a.printShived?a:("undefined"==typeof h.html5shiv&&h.add("html5shiv"),i.attachEvent("onbeforeprint",function(){b();for(var e,g,h,i=a.styleSheets,k=[],m=i.length,n=Array(m);m--;)n[m]=i[m];for(;h=n.pop();)if(!h.disabled&&w.test(h.media)){try{e=h.imports,g=e.length}catch(a){g=0}for(m=0;m<g;m++)n.push(e[m]);try{k.push(h.cssText)}catch(a){}}k=l(k.reverse().join("")),f=j(a),d=c(a,k)}),i.attachEvent("onafterprint",function(){m(f),clearTimeout(g._removeSheetTimer),g._removeSheetTimer=setTimeout(b,500)}),a.printShived=!0,a)}var o,p,q=a.html5||{},r=/^<|^(?:button|map|select|textarea|object|iframe|option|optgroup)$/i,s=/^<|^(?:a|b|button|code|div|fieldset|form|h1|h2|h3|h4|h5|h6|i|iframe|img|input|label|li|link|ol|option|p|param|q|script|select|span|strong|style|table|tbody|td|textarea|tfoot|th|thead|tr|ul)$/i,t=0,u={};(function(){try{var c=b.createElement("a");c.innerHTML="<xyz></xyz>",o="hidden"in c,p=1==c.childNodes.length||function(){b.createElement("a");var a=b.createDocumentFragment();return"undefined"==typeof a.cloneNode||"undefined"==typeof a.createDocumentFragment||"undefined"==typeof a.createElement}()}catch(a){o=!0,p=!0}})();var v={elements:q.elements||"abbr article aside audio bdi canvas data datalist details figcaption figure footer header hgroup mark meter nav output progress section summary time video",shivCSS:!1!==q.shivCSS,supportsUnknownElements:p,shivMethods:!1!==q.shivMethods,type:"default",shivDocument:i,createElement:f,createDocumentFragment:g};a.html5=v,i(b);var w=/^$|\b(?:all|print)\b/,x=!p&&function(){var c=b.documentElement;return"undefined"!=typeof b.namespaces&&"undefined"!=typeof b.parentWindow&&"undefined"!=typeof c.applyElement&&"undefined"!=typeof c.removeNode&&"undefined"!=typeof a.attachEvent}();v.type+=" print",v.shivPrint=n,n(b)})(void 0,document),function(A,B,C){function D(b){return"[object Function]"==f.call(b)}function E(b){return"string"==typeof b}function F(){}function e(b){return!b||"loaded"==b||"complete"==b||"uninitialized"==b}function G(){var b=n.shift();i=1,b?b.t?h(function(){("c"==b.t?H.injectCss:H.injectJs)(b.s,0,b.a,b.x,b.e,1)},0):(b(),G()):i=0}function g(b,a,c,d,g,f,q){function t(c){if(!l&&e(k.readyState)&&(x.r=l=1,!i&&G(),k.onload=k.onreadystatechange=null,c))for(var f in"img"!=b&&h(function(){s.removeChild(k)},50),v[a])v[a].hasOwnProperty(f)&&v[a][f].onload()}var q=q||H.errorTimeout,k=B.createElement(b),l=0,w=0,x={t:c,s:a,e:g,a:f,x:q};1===v[a]&&(w=1,v[a]=[]),"object"==b?k.data=a:(k.src=a,k.type=b),k.width=k.height="0",k.onerror=k.onload=k.onreadystatechange=function(){t.call(this,w)},n.splice(d,0,x),"img"!=b&&(w||2===v[a]?(s.insertBefore(k,p?null:m),h(t,q)):v[a].push(k))}function b(e,a,h,c,d){return i=0,a=a||"j",E(e)?g("c"==a?o:k,e,a,this.i++,h,c,d):(n.splice(this.i++,0,e),1==n.length&&G()),this}function a(){var c=H;return c.loader={load:b,i:0},c}var c,H,d=B.documentElement,h=A.setTimeout,m=B.getElementsByTagName("script")[0],f={}.toString,n=[],i=0,j=("MozAppearance"in d.style),p=j&&!!B.createRange().compareNode,s=p?d:m.parentNode,d=A.opera&&"[object Opera]"==f.call(A.opera),d=!!B.attachEvent&&!d,k=j?"object":d?"script":"img",o=d?"script":k,r=Array.isArray||function(b){return"[object Array]"==f.call(b)},t=[],v={},u={timeout:function timeout(c,a){return a.length&&(c.timeout=a[0]),c}};H=function B(c){function d(h){var i,j,k,h=h.split("!"),l=t.length,b=h.pop(),m=h.length,b={url:b,origUrl:b,prefixes:h};for(j=0;j<m;j++)k=h[j].split("="),(i=u[k.shift()])&&(b=i(b,k));for(j=0;j<l;j++)b=t[j](b);return b}function e(b,c,k,f,g){var h=d(b),i=h.autoCallback;h.url.split(".").pop().split("?").shift(),h.bypass||(c&&(c=D(c)?c:c[b]||c[f]||c[b.split("/").pop().split("?")[0]]),h.instead?h.instead(b,c,k,f,g):(v[h.url]?h.noexec=!0:v[h.url]=1,k.load(h.url,h.forceCSS||!h.forceJS&&"css"==h.url.split(".").pop().split("?").shift()?"c":C,h.noexec,h.attrs,h.timeout),(D(c)||D(i))&&k.load(function(){a(),c&&c(h.origUrl,g,f),i&&i(h.origUrl,g,f),v[h.url]=2})))}function b(d,f){function a(d,a){if(!d)a||k();else if(E(d))a||(h=function(){var b=[].slice.call(arguments);i.apply(this,b),k()}),e(d,h,f,0,o);else if(Object(d)===d)for(g in b=function(){var a,e=0;for(a in d)d.hasOwnProperty(a)&&e++;return e}(),d)d.hasOwnProperty(g)&&(!a&&! --b&&(D(h)?h=function(){var b=[].slice.call(arguments);i.apply(this,b),k()}:h[g]=function(c){return function(){var a=[].slice.call(arguments);c&&c.apply(this,a),k()}}(i[g])),e(d[g],h,f,g,o))}var b,g,o=!!d.test,c=d.load||d.both,h=d.callback||F,i=h,k=d.complete||F;a(o?d.yep:d.nope,!!c),c&&a(c)}var f,g,h=this.yepnope.loader;if(E(c))e(c,0,h,0);else if(r(c))for(f=0;f<c.length;f++)g=c[f],E(g)?e(g,0,h,0):r(g)?H(g):Object(g)===g&&b(g,h);else Object(c)===c&&b(c,h)},H.addPrefix=function(c,a){u[c]=a},H.addFilter=function(b){t.push(b)},H.errorTimeout=1e4,null==B.readyState&&B.addEventListener&&(B.readyState="loading",B.addEventListener("DOMContentLoaded",c=function A(){B.removeEventListener("DOMContentLoaded",c,0),B.readyState="complete"},0)),A.yepnope=a(),A.yepnope.executeStack=G,A.yepnope.injectJs=function(b,a,f,d,g,i){var j,n,p=B.createElement("script"),d=d||H.errorTimeout;for(n in p.src=b,f)p.setAttribute(n,f[n]);a=i?G:a||F,p.onreadystatechange=p.onload=function(){!j&&e(p.readyState)&&(j=1,a(),p.onload=p.onreadystatechange=null)},h(function(){j||(j=1,a(1))},d),g?p.onload():m.parentNode.insertBefore(p,m)},A.yepnope.injectCss=function(b,a,f,d,k,g){var i,d=B.createElement("link"),a=g?G:a||F;for(i in d.href=b,d.rel="stylesheet",d.type="text/css",f)d.setAttribute(i,f[i]);k||(m.parentNode.insertBefore(d,m),h(a,0))}}(void 0,document),Modernizr.load=function(){yepnope.apply(window,[].slice.call(arguments,0))};
//# sourceMappingURL=data:application/json;charset=utf8;base64,
